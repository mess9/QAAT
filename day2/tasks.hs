Заметки и прочая инфа что я вытянул из скайпа после второй лекции. лекцию я эту увы пропустил, делая в последний момент ДЗ и так и уснув не дослушав и не посмотрев, что же там собственно показывали и рассказывали

ссылки:
https://www.baeldung.com/java-org-json
https://habr.com/ru/post/152971/
https://docs.microsoft.com/ru-ru/previous-versions/dotnet/netframework-3.5/ms256086%28v%3dvs.90%29
https://soltau.ru/index.php/themes/dev/item/413-kratkoe-rukovodstvo-po-xpath
https://reqres.in/

а это ещё долг с прошлой лекции
http://javatutor.net/articles/deques
https://metanit.com/java/tutorial/5.7.php

нашёл на рабочей машине:
https://docs.google.com/document/d/1PdfKMDfoqFIlF4tN1jKrOf1iZ1rqESy2xVMIj3uuV3g/pub
http://scraping.pro/res/xpath-cheat/XPath-1.pdf



а вот это уже после третьей лекции:

https://chrome.google.com/webstore/detail/ranorex-selocity/ocgghcnnjekfpbmafindjmijdpopafoe/related
- как я понял - плагин для вырывания селекторов из кода страницы

https://habr.com/ru/post/337700/#o-08 - про junit 5 
http://citforum.ru/internet/xpath/xpath04.shtml - основные функции xpath
http://citforum.ru/internet/xpath/index.shtml - в целом набор знаний по xpath

https://habr.com/ru/company/sberbank/blog/359302/ -- про алюр отчёты



Критерии оценки заданий по UI:
+1 балл - код компилируется и запускается
+1 балл - код запускается без дополнительных действий со стороны проверяющего (не нужно скачивать WebDriver, решать конфликты зависимостей и т.п.)
+1 балл - логи пишутся в консоль и файл
+1 балл - тест проходит без падений (допускается падение теса только при некорректной работе SUT)
+1 балл - реализован паттерн PageObject
+1 балл - реализован паттерн PageFactory
+1 балл - все селекторы надёжные и читаемые
+1 балл - все селекторы не используют номера из списка (к примеру div[])
+1 балл - для всех селекторов нету жёсткой привязке к DOM дереву, при работе со вложеностью больше одного (к примеру div../../../../../)
+1 балл - хотя бы один селектор использует локаторы оси
+1 балл - весь код написан в соответствии с правилами кодстайла Java (к примеру переменные не aba_bbaba, a, abaBaba)
+1 балл - алгоритмы читаемы, нету дублирования кода


собственно сами задания:

UI
Задание 1.1

Задача:
1.	запустить Chrome
2.	Открыть яндекс
3.	Ввести «Гладиолус». Нажать поиск
4.	Убедится что в полученной выборке на первой странице есть ссылка на википедию
 Автотест необходимо написать, используя данный стек:
Java, JUnit, Selenium
Автотест необходимо написать, используя данный стек:
Java, JUnit, Selenium, PageObject
Задание 1.2
Задача:
5.	запустить Chrome
6.	открыть https://www.google.com/
7.	написать в строке поиска «Открытие»
8.	нажать Поиск
9.	проверить, что результатах поиска есть https://www.open.ru
10.	перейти на сайт https://www.open.ru
11.	проверить в блоке «Курс обмена в интернет-банке», что курс продажи больше курса покупки, для USD и для EUR.
 
Автотест необходимо написать, используя данный стек:
Java, JUnit, Selenium, PageObject


Задание 1.3

1.	Запустить Chrome
2.	Открыть яндекс маркет
3.	Перейти в раздел мобильные телефоны
4.	Установить фильтр по производителю Apple
5.	Убедиться, что в полученной выборке телефоны только производителя Apple. Проверить все страницы. Скрипт должен просматривать все доступные страницы. Считаем что страниц может быть от одной до 10.
Автотест необходимо написать, используя данный стек:
Java, JUnit, Selenium, PageFactory


API
Задание 2.1

1.	Используя сервис https://reqres.in/ получить список пользователей со второй страницы.
2.	Убедится что аватары пользователей совпадают
3.	Автотесты необходимо написать, используя данный стек:
4.	Java, testNG, restAssured.
API


Задание 2.1

1.	Используя сервис https://reqres.in/ протестировать регистрацию пользователя в системе.
2.	Необходимо создание двух тестов на успешный логи и логин с ошибкой из-за не введённого пароля
Автотест необходимо написать, используя данный стек:
Java, JUnit, Selenium, PageFactory
API


Задание 2.2


Используя сервис https://reqres.in/ убедится что операция LIST <RESOURCE> возвращает данные отсортированные по годам
Автотест необходимо написать, используя данный стек:
Java, JUnit, Selenium, PageFactory


Задание 3.1
По рест асуред.
Перейти на https://www.sberbank-ast.ru/purchaseList.aspx
Найти закупки по 44-фз
Получить из первых 50 ссылки на закупки, номер закупки для закупок с ценой менее 4 млн




https://livesql.oracle.com/apex/f?p=590:1000




